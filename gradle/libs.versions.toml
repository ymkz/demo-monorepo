[versions]
spring-boot = "3.5.7" # https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies
jackson = "3.0.1" # https://mvnrepository.com/artifact/tools.jackson/jackson-bom
junit = "6.0.0" # https://mvnrepository.com/artifact/org.junit/junit-bom
testcontainers = "2.0.1" # https://mvnrepository.com/artifact/org.testcontainers/testcontainers-bom
lombok = "1.18.42" # https://mvnrepository.com/artifact/org.projectlombok/lombok
mybatis = "3.0.5" # https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
mysql = "9.4.0" # https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
micrometer = "1.15.5" # https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus
springdoc-webmvc = "2.8.13" # https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-api
mockito = "5.20.0" # https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
rest-assured = "5.5.6" # https://mvnrepository.com/artifact/io.rest-assured/rest-assured
spotless = "8.0.0" # https://mvnrepository.com/artifact/com.diffplug.spotless/spotless-plugin-gradle
springdoc-openapi = "1.9.0" # https://mvnrepository.com/artifact/org.springdoc.openapi-gradle-plugin/org.springdoc.openapi-gradle-plugin.gradle.plugin

[libraries]
spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
jackson-bom = { module = "tools.jackson:jackson-bom", version.ref = "jackson" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }

lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
jackson-dataformat-csv = { module = "tools.jackson.dataformat:jackson-dataformat-csv" }
mybatis-spring-boot-starter = { module = "org.mybatis.spring.boot:mybatis-spring-boot-starter", version.ref = "mybatis" }
mysql-connector-j = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }
springdoc-openapi-starter-webmvc-api = { module = "org.springdoc:springdoc-openapi-starter-webmvc-api", version.ref = "springdoc-webmvc" }

junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-mysql = { module = "org.testcontainers:mysql" }
rest-assured = { module = "io.rest-assured:rest-assured", version.ref = "rest-assured" }

spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }

[bundles]
unit-test = [
  "spring-boot-starter-test",
  "mockito-junit-jupiter",
]
integration-test = [
  "spring-boot-starter-test",
  "spring-boot-testcontainers",
  "testcontainers-junit-jupiter",
  "testcontainers-mysql",
  "rest-assured",
]
api = [
  "spring-boot-starter-validation",
  "spring-boot-starter-actuator",
  "micrometer-registry-prometheus",
  "spring-boot-starter-web",
  "mybatis-spring-boot-starter",
  "mysql-connector-j",
  "springdoc-openapi-starter-webmvc-api",
  "jackson-dataformat-csv",
]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
springdoc-openapi = { id = "org.springdoc.openapi-gradle-plugin", version.ref = "springdoc-openapi" }
